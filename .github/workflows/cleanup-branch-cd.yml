name: Cleanup Branch with CD

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  onBranchDeleted:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      id-token: write
      contents: read
    steps:
      - name: Check issue for CD cleanup
        run: |
          echo "found ${{ github.event.comment.body }}"
          if [ ${{ github.event.comment.body }} == "yes" ]; then
            echo "cleaning up CD for $(echo ${{ github.event.issue.title }} | cut -c16-)"
          else
            echo "doing nothing"
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::384408301901:role/gitops-odic-source-Role-BLOZ4AX6UZ39

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Add delete started comment
        uses: peter-evans/create-or-update-comment@v2.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Pipeline stack delete initiated. Waiting for deletion...

      - name: Cleanup Gitops Pipeline
        run: |
          scripts/cleanup-cd-pipelines.sh

      - name: Add delete completed comment
        uses: peter-evans/create-or-update-comment@v2.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Pipeline stack successfully cleaned up

      - name: Close Issue
        uses: peter-evans/close-issue@v2.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: Auto-closing issue

      # - name: Check for pipeline existing
      #   run: |
      #     echo "::set-output name=PIPELINE_EXISTS::$(scripts/doesPipelineExist.sh featureX)"
      #   id: pipelineexists

      # - name: Generate Issue file
      #   run: |
      #     echo 'Detected branch deletion: featureX. Should we cleanup the CD pipeline?. Comment "Yes" to delete"' > issue-input.md
      #   if: ${{ steps.pipelineexists.outputs.PIPELINE_EXISTS }} == 1
