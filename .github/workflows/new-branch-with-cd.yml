# This workflow checks for new issues using the new CD template
#

name: Setup CD for new Branch

on: issues

jobs:
  newIssueCreated:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      issues: write
    steps:
      - name: Save branch name to file
        run: echo "${{ github.event.issue.body }}" > input.yaml

      - name: yq - portable yaml processor
        uses: mikefarah/yq@v4.25.3
        id: getbranch
        with:
          # The Command which should be run
          cmd: "yq .BranchName input.yaml"

      - name: Print Branch
        uses: peter-evans/create-or-update-comment@v2.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Creating pipeline with BranchName: ${{ steps.getbranch.outputs.result }}

      # - name: Create Branch
      #   uses: peterjgrainger/action-create-branch@v2.2.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     branch: "${{ steps.getbranch.outputs.result }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::384408301901:role/gitops-odic-source-Role-BLOZ4AX6UZ39

      - name: Create pipeline
        run: |
          aws cloudformation create-stack --stack-name spring-boot-pipeline-${{ steps.getbranch.outputs.result }} --template-body "file://$(pwd)/cloudformation/pipeline.yaml"  --capabilities CAPABILITY_NAMED_IAM --parameters '[{"ParameterKey": "BranchName", "ParameterValue": "${{ steps.getbranch.outputs.result }}"},{"ParameterKey": "EnvName", "ParameterValue": "${{ steps.getbranch.outputs.result }}"}]'

      - name: Create pipeline comment
        uses: peter-evans/create-or-update-comment@v2.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            New CF stack for pipeline created: spring-boot-pipeline-${{ steps.getbranch.outputs.result }}

      - name: Close Issue
        uses: peter-evans/close-issue@v2.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: Auto-closing issue
