AWSTemplateFormatVersion: "2010-09-09"

# TODOs
# - automate permissions to have access to environments they create? (hard to bootstrap)

# - minimize permissions using access anaylzer. Pipeline role and github actions role
# https://aws.amazon.com/blogs/security/remove-unnecessary-permissions-in-your-iam-policies-by-using-service-last-accessed-data/
# - dynamically link inputs: app name and app version
# - add links to resources from pipelines in UI
# - Automate new applicationversions, link to pipeline
# - Break pipeline into modules separating pipeline role from function

# - add gate for production
#
# Document bootstrapping
# - add codestart-connection resource for github
# - github OIDC credentials
#
# How to update pipelines when you have a pipeline change?
#
#cf create-stack --stack-name spring-boot-pipeline-eeeee --template-body file:///Users/johnzaccone/uzurv-code/springdemo/cloudformation/pipeline.yaml  --capabilities CAPABILITY_NAMED_IAM --parameters '[{"ParameterKey": "BranchName", "ParameterValue": "eeeeee"}]'

Description: >
  AWS CloudFormation Sample Template Continuous Delievery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks.

Parameters:
  BranchName:
    Description: Git branch that is used as the source
    Type: String
  EnvName:
    Description: Name of the env folder in the gitops repo
    Type: String
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref "ArtifactStoreBucket"
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Sub spring-build-and-deploy-${BranchName}
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: "Source"
          Actions:
            - Name: "AppCodeSource"
              ActionTypeId:
                Category: "Source"
                Owner: "AWS"
                Provider: "CodeStarSourceConnection"
                Version: "1"
              Configuration:
                BranchName: !Sub "${BranchName}"
                ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/fd93dc2b-3ec1-4a99-99bf-9cba4d26159d"
                FullRepositoryId: "jzaccone/spring-hello-world"
                OutputArtifactFormat: "CODEBUILD_CLONE_REF"
              OutputArtifacts:
                - Name: "SourceArtifact"
              Region: !Ref AWS::Region
              Namespace: "SourceVariables"
              RunOrder: 1
            - Name: "GitOpsSource"
              ActionTypeId:
                Category: "Source"
                Owner: "AWS"
                Provider: "CodeStarSourceConnection"
                Version: "1"
              Configuration:
                BranchName: "main"
                ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/fd93dc2b-3ec1-4a99-99bf-9cba4d26159d"
                FullRepositoryId: "jzaccone/elastic-beanstalk-gitops"
                OutputArtifactFormat: "CODEBUILD_CLONE_REF"
                DetectChanges: "false"
              OutputArtifacts:
                - Name: "GitopsSourceArtifact"
              Region: !Ref AWS::Region
              RunOrder: 1
        - Name: "Build"
          Actions:
            - Name: "Build-app"
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: "1"
              Configuration:
                ProjectName: "build-springboot-helloworld"
              InputArtifacts:
                - Name: "SourceArtifact"
              Region: !Ref AWS::Region
              RunOrder: 1
              OutputArtifacts:
                - Name: WarFile
        - Name: "Publish"
          Actions:
            - Name: Publish-App
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: "1"
              RunOrder: 2
              Configuration:
                BucketName: the-build-artifacts
                ObjectKey: !Sub springboot-#{SourceVariables.CommitId}.war
                Extract: "false"
              InputArtifacts:
                - Name: WarFile
        - Name: "Deploy"
          Actions:
            - Name: "deploy-app"
              InputArtifacts:
                - Name: GitopsSourceArtifact
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: "1"
              Configuration:
                EnvironmentVariables: !Sub '[{"name":"GIT_HASH","value":"#{SourceVariables.CommitId}","type":"PLAINTEXT"},{"name":"EnvName","value":"${EnvName}","type":"PLAINTEXT"}]'
                ProjectName: "deploy-springboot-to-dev"
              Region: !Ref AWS::Region
              RunOrder: 3

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "s3:*"
                  - "codebuild:*"
                Effect: Allow
                Resource: "*"
        - PolicyName: GithubConnectionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "codestar-connections:UseConnection"
                Effect: Allow
                Resource: "arn:aws:codestar-connections:us-east-1:384408301901:connection/fd93dc2b-3ec1-4a99-99bf-9cba4d26159d"
