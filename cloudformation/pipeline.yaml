AWSTemplateFormatVersion: "2010-09-09"

# TODOs
# - automate permissions to have access to environments they create? (hard to bootstrap)

# - minimize permissions using access anaylzer. Pipeline role and github actions role
# https://aws.amazon.com/blogs/security/remove-unnecessary-permissions-in-your-iam-policies-by-using-service-last-accessed-data/
# - dynamically link inputs: app name and app version
# - add links to resources from pipelines in UI
# - Automate new applicationversions, link to pipeline
# - Break pipeline into modules separating pipeline role from function

# - add gate for production
#
# Document bootstrapping
# - add codestart-connection resource for github
# - github OIDC credentials
#
# How to update pipelines when you have a pipeline change?
#
#

Description: >
  AWS CloudFormation Sample Template Continuous Delievery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks.

# Parameters:
#   PipelineName:
#     Description: A name for pipeline
#     Type: String
# Metadata:
#   AWS::CloudFormation::Interface:
#     ParameterGroups:
#       - Label:
#           default: "CodePipeline Settings"
#         Parameters:
#           - PipelineName
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref "ArtifactStoreBucket"
        Type: S3
      DisableInboundStageTransitions: []
      Name: spring-demo-pipeline #!Ref "PipelineName"
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: "Source"
          Actions:
            - Name: "TemplateSource"
              ActionTypeId:
                Category: "Source"
                Owner: "AWS"
                Provider: "CodeStarSourceConnection"
                Version: "1"
              Configuration:
                BranchName: "main"
                ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/fd93dc2b-3ec1-4a99-99bf-9cba4d26159d"
                FullRepositoryId: "jzaccone/spring-hello-world"
                OutputArtifactFormat: "CODEBUILD_CLONE_REF"
              OutputArtifacts:
                - Name: "SourceArtifact"
              Region: !Ref AWS::Region
              Namespace: "SourceVariables"
              RunOrder: 1
        # - Name: "Build"
        #   Actions:
        #     - Name: "Build-app"
        #       ActionTypeId:
        #         Category: "Build"
        #         Owner: "AWS"
        #         Provider: "CodeBuild"
        #         Version: "1"
        #       Configuration:
        #         ProjectName: "build-springboot-helloworld"
        #       InputArtifacts:
        #         - Name: "SourceArtifact"
        #       Region: !Ref AWS::Region
        #       RunOrder: 1
        #       OutputArtifacts:
        #         - Name: WarFile
        # - Name: "Publish"
        #   Actions:
        #     - Name: Publish-App
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Provider: S3
        #         Version: "1"
        #       RunOrder: 2
        #       Configuration:
        #         BucketName: the-build-artifacts
        #         ObjectKey: !Sub springboot-helloworld-#{SourceVariables.CommitId}
        #         Extract: "false"
        #       InputArtifacts:
        #         - Name: WarFile
        - Name: "Deploy"
          Actions:
            - Name: "deploy-app"
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: "1"
              Configuration:
                ProjectName: "deploy-springboot-to-dev"
                # EnvironmentVariables: '[{"name":"TEST_VARIABLE","value":"TEST_VALUE","type":"PLAINTEXT"},{"name":"ParamStoreTest","value":"PARAMETER_NAME","type":"PARAMETER_STORE"}]'
                # EnvironmentVariables: '[{"name": "artifactS3Key", "value": "springboot-helloworld-#{SourceVariables.CommitId}", "type": "string"}]'
              Region: !Ref AWS::Region
              RunOrder: 3

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "s3:*"
                  - "codebuild:*"
                Effect: Allow
                Resource: "*"
        - PolicyName: GithubConnectionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "codestar-connections:UseConnection"
                Effect: Allow
                Resource: "arn:aws:codestar-connections:us-east-1:384408301901:connection/fd93dc2b-3ec1-4a99-99bf-9cba4d26159d"
